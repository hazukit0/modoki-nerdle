{"version":3,"sources":["App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["Square","props","react_default","a","createElement","className","concat","state","class","filter","v","join","onClick","value","Board","squares","map","row","i","key","toString","column","j","App_Square","renderSquare","OperationButton","OperationBoard","buttons","App_OperationButton","renderButton","Game","_useState","useState","logic","_useState2","Object","slicedToArray","setState","status","message","App_Board","clickBoard","_ref","isFinished","activeSquare","App_OperationBoard","operations","str","clickOperationBoard","_ref2","App","Nerdle","App_Game","CLASS_ACTIVE","result","this","beforeActiveSquare","operation","is_inputs","includes","is_operators","length","resultArray","values","square","inputCheck","setStyle","array","indexOf","checkCalculation","equation","parts","split","leftResult","rightResult","Function","e","Boolean","window","location","hostname","match","reportWebVitals","onPerfEntry","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,MACzM,CAAC,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,MACzM,CAAC,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,MACzM,CAAC,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,MACzM,CAAC,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAM,CAACK,MAAO,GAAIL,MAAO,CAAC,KAAK,CAACK,MAAO,GAAIL,MAAO,CAAC,KA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","file":"static/js/main.1c4d8fbe.chunk.js","sourcesContent":["import React from 'react';\nimport { useState } from 'react'\nimport logo from './logo.svg';\nimport './App.css';\n\n// Square state type\ntype SquareState = {\n  value: string\n  class: string[]\n}\n\n// Square props type\ntype SquareProps = {\n  state: SquareState\n  onClick: () => void\n}\n\n// Square component\nconst Square = (props: SquareProps) => (\n  <button className={`square ${props.state.class.filter(v => v).join(' ')}`} onClick={props.onClick}>\n    {props.state.value}\n  </button>\n)\n\n// Board props type\ntype BoardProps = {\n  squares: SquareState[][]\n  onClick: (i: number,j: number) => void\n}\n\n// Board component\nconst Board = (props: BoardProps) => {\n  const renderSquare = (i: number,j: number) => (\n    <Square state={props.squares[i][j]} onClick={() => props.onClick(i,j)} key={i.toString()+'-'+j.toString()}/>\n  )\n\n  return (\n    <div className='grid'>\n    {props.squares.map((row, i) => (\n      <div className='board-row' key={i.toString()}>\n      {row.map((column, j) => (\n        renderSquare(i,j)\n      ))}\n      </div>\n    ))}\n    </div>\n  )\n}\n\n// OperationButton props type\ntype OperationButtonProps = {\n  value: string\n  onClick: () => void\n}\n\n// OperationButton component\nconst OperationButton = (props: OperationButtonProps) => (\n  <button className='square' onClick={props.onClick} >\n    {props.value}\n  </button>\n)\n\n// OperationBoard props type\ntype OperationBoardProps = {\n  buttons: string[][]\n  onClick: (i: string) => void\n}\n\n// OperationBoard component\nconst OperationBoard = (props: OperationBoardProps) => {\n  const renderButton = (i: number,j: number) => (\n    <OperationButton value={props.buttons[i][j]} onClick={() => props.onClick(props.buttons[i][j])} key={i.toString()+'-'+j.toString()}/>\n  )\n\n  return (\n    <div>\n    {props.buttons.map((row, i) => (\n      <div className='board-row' key={i.toString()}>\n      {row.map((column, j) => (\n        renderButton(i,j)\n      ))}\n      </div>\n    ))}\n    </div>\n  )\n}\n\n// Game state type\ntype GameState = {\n  squares: SquareState[][]\n  isFinished: boolean\n  activeSquare: number[]\n}\n\n// Game component\nconst Game = (props: { logic : GameLogicInterface }) => {\n  const [state, setState] = useState<GameState>(props.logic.state)\n  \n  // display status message \n  status = props.logic.message\n  \n  // game board click event \n  const handleClickBoard = (i: number, j:number) => {\n \n    if (!props.logic.clickBoard(i, j)) return\n\n    setState(({ squares, isFinished, activeSquare}) => {\n      return {\n        squares: state.squares,\n        isFinished: state.isFinished,\n        activeSquare: state.activeSquare\n      }\n    })\n  }\n  \n  // Operation buttons click event\n  const handleClickOperationBoard = (str: string) => {\n\n    if (!props.logic.clickOperationBoard(str)) return\n \n    setState(({ squares, isFinished, activeSquare}) => {\n      return {\n        squares: state.squares,\n        isFinished: state.isFinished,\n        activeSquare: state.activeSquare\n      }\n    })\n  }\n  \n  return (\n    <div className='game'>\n      <div className='game-info'>\n        <div className='game-status'>\n          <div>{status}</div>\n        </div>\n      </div>\n      <div className='game-board'>\n        <Board squares={state.squares} onClick={handleClickBoard} />\n      </div>\n      <div className='game-operation-bord'>\n        <OperationBoard buttons={props.logic.operations} onClick={handleClickOperationBoard} />\n      </div>\n    </div>\n  )\n}\n\n// game logic interface\ninterface GameLogicInterface {\n  state : GameState\n  // operation buttons\n  operations : string[][]\n  // status message\n  message : string\n  // Change active position\n  clickBoard(i: number, j:number) : boolean\n  // Click on the operation button\n  clickOperationBoard(operation: string) : boolean\n}\n\n// Application start point\nconst App = () => {\n  var logic = new Nerdle;\n  return (\n    <Game logic={logic}/>\n  )\n}\n\nfunction log(v : any) {\n    //console.log(v);\n}\n\n\nexport default App;\n\n//////////////////////////////////////////////////////////////////////////////\n// GameLogicInterface implementation\n// Replacing here changes the logic of the game\n//////////////////////////////////////////////////////////////////////////////\n\n// html class\nconst CLASS_ACTIVE = 'active'\n// message\nconst MESSAGE_ERROR_NO_COMPUTE = 'That guess doesn\\'t compute!'\nconst MESSAGE_ERROR_BLANKS     = 'That guess doesn\\'t compute - Please foll in the blanks!'\nconst MESSAGE_YOU_WON          = 'You won!'\nconst MESSAGE_YOU_LOST         = 'You lost, the calculation was '\n\n// nerdle game logic\nclass Nerdle implements GameLogicInterface {\n  // todo forgot to color the control buttons\n  operations = [['1','2','3','4','5','6','7','8','9','0'],['+','-','*','/','='],['Enter','Delete']]\n  state = {\n    squares: [\n      [{value: '', class: [CLASS_ACTIVE],}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']}], \n      [{value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']}],\n      [{value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']}],\n      [{value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']}],\n      [{value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']}],\n      [{value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']},{value: '', class: ['']}, {value: '', class: ['']}, {value: '', class: ['']}],\n    ],\n    isFinished: false,\n    activeSquare: [0,0]\n  } as GameState\n  \n  // todo Multiple result\n  result = '2*3+5=11'\n  // resutlts = ['2*3+5=11','3*2+5=11','5+3*2=11']\n  message = ''\n  \n  // click on the grit square\n  clickBoard(i: number, j:number) : boolean {\n    if (this.state.isFinished) return false\n    \n    this.message = ''\n    if (this.state.activeSquare[0] != i) {\n      return false\n    }\n    let beforeActiveSquare = this.state.activeSquare\n    this.state.activeSquare = [i,j]\n    // change active position\n    if (beforeActiveSquare[1] != j) {\n      this.state.squares[beforeActiveSquare[0]][beforeActiveSquare[1]].class[0] = ''\n    }\n    this.state.squares[i][j].class[0] = CLASS_ACTIVE;\n    return true\n  }\n  \n  // click on the operation button\n  clickOperationBoard(operation: string) : boolean {\n    if (this.state.isFinished) return false\n    this.message = ''\n    const is_inputs = this.operations[0].includes(operation) || this.operations[1].includes(operation)\n    const is_operators = this.operations[2].includes(operation)\n    \n    if (!is_inputs && !is_operators) return false\n    \n    // todo refactoring\n    if (is_inputs && this.state.activeSquare[1] < this.state.squares[0].length) {\n      log('comman:'+operation)\n      // Change active position\n      this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].value = operation\n      if (this.state.activeSquare[1] < (this.state.squares[0].length - 1)) {\n        this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].class[0] = ''\n        this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]+1].class[0] = CLASS_ACTIVE\n        this.state.activeSquare[1]++\n      }\n    } else if (is_operators) {\n      switch (operation) {\n        case 'Enter':\n          log('comman:Enter')\n          // Check the result\n          const resultArray = this.state.squares[this.state.activeSquare[0]]\n          const values = resultArray.map(square => square.value as string)\n          if ( !this.inputCheck(values) ) {\n            return true\n          }\n          this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].class[0] = ''\n          this.setStyle(resultArray)\n        \n          if (values.join('') == this.result) {\n            // won\n            this.state.isFinished = true\n            this.message = MESSAGE_YOU_WON\n          } else if (this.state.activeSquare[0] < (this.state.squares.length - 1)) {\n            // next row\n            this.state.activeSquare[0]++\n            this.state.activeSquare[1] = 0\n            this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].class[0] = CLASS_ACTIVE\n          } else {\n            // Game over\n            this.message = MESSAGE_YOU_LOST + this.result\n          }\n          break;\n        case 'Delete':\n          log('comman:Delete')\n          // delete\n          if (this.state.activeSquare[1] >= 1 && this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].value == '') {\n            this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].class[0] = ''\n            this.state.activeSquare[1]--\n            this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].value = ''\n            this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].class[0] = CLASS_ACTIVE\n          } else {\n            this.state.squares[this.state.activeSquare[0]][this.state.activeSquare[1]].value = ''\n          }\n          break;\n      }\n    }\n    return true\n  }\n\n  // input check\n  private inputCheck(array : string[]) : boolean {\n    // empty check\n    if (array.indexOf('') >= 0) {\n      this.message = MESSAGE_ERROR_BLANKS\n      return false\n    }\n    // check for calculability\n    const str = array.join('')\n    if (!this.checkCalculation(str)) {\n      this.message = MESSAGE_ERROR_NO_COMPUTE\n      return false\n    }\n    return true\n  }\n  \n  // check for calculability\n  private checkCalculation(equation : string) : boolean {\n    const parts = equation.split('=')\n    if (parts.length != 2) return false\n    let leftResult = 0\n    let rightResult = 0\n    try {\n      leftResult = Function('return ('+parts[0]+');')();\n      rightResult = Function('return ('+parts[1]+');')();\n    } catch (e) {\n      return false\n    }\n    return (leftResult == rightResult)\n  }\n  \n  // set cell background from results\n  private setStyle(resultArray: SquareState[]) {\n    for (var i = 0; i < resultArray.length; i++) {\n      const v = resultArray[i]\n      if (v.value == this.result[i]) {\n        v.class = ['green']\n      } else  if (this.result.indexOf(v.value) >= 0) {\n        v.class = ['purple']\n      } else {\n        v.class = ['black']\n      }\n    }\n  }\n  \n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}